<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.ipeglobal</groupId>
		<artifactId>rmncha</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>rmncha-dashboard-service</artifactId>
	<packaging>war</packaging>
	<name>si-rmncha</name>
	<properties>
		<elasticsearch.version>2.4.4</elasticsearch.version>
		<spring-cloud.version>Edgware.SR5</spring-cloud.version>
	</properties>


	<dependencies>
		<dependency>
			<groupId>org.ipeglobal</groupId>
			<artifactId>rmncha-common-services</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.springframework.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-eureka</artifactId> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/javax.mail/mail -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
		</dependency>


		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.17</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.8.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<!-- Apache batik for svg export -->
		<!-- https://mvnrepository.com/artifact/org.apache.xmlgraphics/batik-all -->
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-all</artifactId>
			<version>1.11</version>
			<type>pom</type>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.xmlgraphics/batik-xml -->
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-xml</artifactId>
			<version>1.11</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.xmlgraphics/batik-bridge -->
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-bridge</artifactId>
			<version>1.11</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.xhtmlrenderer/core-renderer -->
		<dependency>
			<groupId>org.xhtmlrenderer</groupId>
			<artifactId>core-renderer</artifactId>
			<version>R8pre2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.itextpdf/itextpdf -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.5.13</version>
		</dependency>


		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>org.rosuda.REngine</groupId>
			<artifactId>REngine</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.github.lucarosellini.rJava</groupId>
			<artifactId>JRI</artifactId>
			<version>0.9-7</version>
		</dependency>
		<dependency>
			<groupId>com.github.lucarosellini.rJava</groupId>
			<artifactId>JRIEngine</artifactId>
			<version>0.9-7</version>
		</dependency>

		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>

		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>

		</dependency>


		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.5</version>
		</dependency>
		<!-- <dependency> <groupId>com.fasterxml.jackson.core</groupId> <artifactId>jackson-databind</artifactId> 
			</dependency> <dependency> <groupId>com.google.code.gson</groupId> <artifactId>gson</artifactId> 
			</dependency> -->
		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<!-- https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple -->
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
		</dependency>

		<!--gson dependency -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-stream-rabbit</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.vladmihalcea</groupId>
			<artifactId>hibernate-types-5</artifactId>
			<version>2.4.0</version>
		</dependency>
	</dependencies>



	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>si-rmncha-dashboard</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<includeSystemScope>true</includeSystemScope>
				</configuration>
			</plugin>
			<!-- <plugin> -->
			<!-- <artifactId>maven-war-plugin</artifactId> -->
			<!-- <configuration> -->
			<!-- <webResources> -->
			<!-- <resource> -->
			<!-- <directory>../rmncha-dashboard-service/target</directory> -->
			<!-- </resource> -->
			<!-- </webResources> -->
			<!-- </configuration> -->
			<!-- </plugin> -->

			<!-- We use the Resources plugin to filer Dockerfile and run.sh, it inserts 
				actual JAR filename -->
			<!-- The final Dockerfile will be created in target/dockerfile/Dockerfile -->
			<!-- <plugin> -->
			<!-- <artifactId>maven-resources-plugin</artifactId> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>copy-resources</id> -->
			<!-- here the phase you need -->
			<!-- <phase>validate</phase> -->
			<!-- <goals> -->
			<!-- <goal>copy-resources</goal> -->
			<!-- </goals> -->
			<!-- <configuration> -->
			<!-- <outputDirectory>${basedir}/target/dockerfile</outputDirectory> -->
			<!-- <resources> -->
			<!-- <resource> -->
			<!-- <directory>src/main/docker</directory> -->
			<!-- <filtering>true</filtering> -->
			<!-- </resource> -->
			<!-- </resources> -->
			<!-- </configuration> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->
			<!-- <plugin> -->
			<!-- <groupId>com.spotify</groupId> -->
			<!-- <artifactId>docker-maven-plugin</artifactId> -->
			<!-- <version>0.4.10</version> -->
			<!-- <configuration> -->
			<!-- <imageName>${docker.image.name}:${docker.image.tag}</imageName> -->
			<!-- <dockerDirectory>${basedir}/target/dockerfile</dockerDirectory> -->
			<!-- <resources> -->
			<!-- <resource> -->
			<!-- <targetPath>/</targetPath> -->
			<!-- <directory>${project.build.directory}</directory> -->
			<!-- <include>${project.build.finalName}.jar</include> -->
			<!-- </resource> -->
			<!-- </resources> -->
			<!-- </configuration> -->
			<!-- </plugin> -->


			<!-- <plugin> -->
			<!-- <groupId>org.apache.tomcat.maven</groupId> -->
			<!-- <artifactId>tomcat7-maven-plugin</artifactId> -->
			<!-- <version>2.2</version> -->
			<!-- <configuration> -->
			<!-- <url>http://devserver.sdrc.co.in:8095/manager/text</url> -->
			<!-- <server>TomcatServer</server> -->

			<!-- <username>jenkins</username> -->
			<!-- <password>jenkins</password> -->
			<!-- <path>/rmnchadashboardservice</path> -->
			<!-- </configuration> -->
			<!-- </plugin> -->
		</plugins>
	</build>
</project>