spring.data.elasticsearch.cluster-name=elasticsearch
spring.data.elasticsearch.cluster-nodes=192.168.1.36:9300

spring.data.elasticsearch.repositories.enabled=true

#logging.level.org.org.springframework.data=INFO
#logging.level.org.elasticsearch.index.search.slowlog.query=INFO
spring.data.elasticsearch.properties.index.search.slowlog.threshold.query.info=1ms
#logging.level.org.springframework.data.elasticsearch.core=INFO

logging.level.org.quartz=OFF
logging.level.org.springframework.web=ERROR
logging.level.org.sdrc.rmnchadashboard=DEBUG
logging.path=C://rmnchadashboard/rmnchadashboarduat
logging.file=${logging.path}.log
logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n

elasticsearch.index.name=rmncha-index-1

elasticsearch.indicatorindex.name=rmncha-indicator-index-1
elasticsearch.unitindex.name=rmncha-unit-index-1
elasticsearch.sectorindex.name=rmncha-sector-index-1
elasticsearch.subgroupindex.name=rmncha-subgroup-index-1
elasticsearch.areaindex.name=rmncha-area-index-1
elasticsearch.sourceindex.name=rmncha-source-index-1



elasticsearch.indicator.type=rmncha-indicator-type-1
elasticsearch.unit.type=rmncha-unit-type-1
elasticsearch.sector.type=rmncha-sector-type-1
elasticsearch.data.type=rmncha-data-type-1
elasticsearch.subgroup.type=rmncha-subgroup-type-1
elasticsearch.area.type=rmncha-area-type-1
elasticsearch.arealevel.type=rmncha-arealevel-type-1
elasticsearch.source.type=rmncha-source-type-1

spring.jmx.default-domain=rmnchawapp-release-2

spring.datasource.url=jdbc:postgresql://172.22.0.38:5433/rmnchawapp-uat


spring.datasource.username=postgres
spring.datasource.password=P@s5Word#!
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.datasource.driver-class-name=org.postgresql.Driver


#For production environment,please set spring.datasource.hikari.maximum-pool-size=120 to 120 connections.
#spring.datasource.hikari.connection-timeout is 60000 = 1 minute , request will wait to take connection from pool,else sql exception will be thrown.
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.connection-timeout=36000000
spring.datasource.hikari.maximum-pool-size=5
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.hikari.connection-init-sql=SELECT 1
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.idle-timeout=0

spring.http.multipart.max-file-size=500MB
spring.http.multipart.max-request-size=500MB

server.context-path=/rmnchawapp

#for sending mail
smtp.host.key=mail.smtp.host
socketFactory.port.key=mail.smtp.socketFactory.port
socketFactory.class.key=mail.smtp.socketFactory.class
smtp.auth.key=mail.smtp.auth
smtp.port.key=mail.smtp.port

smtp.host=smtp.gmail.com
socketFactory.port=465
socketFactory.class=javax.net.ssl.SSLSocketFactory
smtp.auth=true
smtp.port=465

authentication.userid=rmnchawapp@gmail.com
authentication.password=@@password


colFile=classpath:Rscript/demo.R

singleColNumericStatstics=classpath:Rscript/demo.R

singleColCatStatstics=classpath:Rscript/one_col_stat_cat.R

multiColNumericStatstics=classpath:Rscript/multi_col_stat_numeric.R

multiColCatStatstics=classpath:Rscript/multi_col_stat_cat.R

outlier=classpath:Rscript/matrix.R

missingValue=classpath:Rscript/missing_value.R

regression=classpath:Rscript/OneToMany_col_corelation.R


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=emitra.do.not.reply@gmail.com
spring.mail.password=sdrc@1234#
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

email.reciver.to=query.emitra@gmail.com

email.reciver.cc=

email.reciver.bcc=

sdrc.tech.support=techsupport@sdrc.co.in 


#-Djava.library.path=C:\\Users\\SDRCADMIN\\Documents\\R\\win-library\\3.4\\rJava\\jri

#mongo config

spring.data.mongodb.host=${MONGODB_URL}
spring.data.mongodb.database=rmncha_uat_dashboard
spring.data.mongodb.port=${MONGODB_PORT}

spring.data.mongodb.authentication-database=${MONGOAUTHDB}
spring.data.mongodb.username=${MONGODB_USERNAME}
spring.data.mongodb.password=${MONGODB_PASSWORD}


#spring.data.mongodb.username=debi
#spring.data.mongodb.password=debi
#eureka.client.service-url.defaultZone=${EUREKA_URI:http://eurekaAdmin:eurekaAdmin123@localhost:8761/eureka}


spring.rabbitmq.host=172.22.0.41
spring.rabbitmq.port=5672
spring.rabbitmq.username=prod
spring.rabbitmq.password=test@123#

#data entry channel
spring.cloud.stream.bindings.rmnchadataentrychannel-in.destination=rmnchaDataEntryexchange-uat
spring.cloud.stream.bindings.rmnchadataentrychannel-in.contentType=application/json
spring.cloud.stream.bindings.rmnchadataentrychannel-in.group=rmnchaDataEntryconsmerqueue
spring.cloud.stream.rabbit.bindings.rmnchadataentrychannel-in.consumer.bindingRoutingKey=rmnchaDataEntryroutingkey

#submission management channel
spring.cloud.stream.bindings.rmnchasubmissionchannel-in.destination=rmnchaSubmissionExchange-uat
spring.cloud.stream.bindings.rmnchasubmissionchannel-in.contentType=application/json
spring.cloud.stream.bindings.rmnchasubmissionchannel-in.group=rmnchaSubmissionConsmerqueue
spring.cloud.stream.rabbit.bindings.rmnchasubmissionchannel-in.consumer.bindingRoutingKey=rmnchaSubmissionroutingkey

#JOB to update submissions to default channel
#spring.cloud.stream.bindings.rmnchadefaultchannel-in.destination=rmnchaDefaultExchange-uat
#spring.cloud.stream.bindings.rmnchadefaultchannel-in.contentType=application/json
#spring.cloud.stream.bindings.rmnchadefaultchannel-in.group=rmnchaDefaultConsmerqueue
#spring.cloud.stream.rabbit.bindings.rmnchadefaultchannel-in.consumer.bindingRoutingKey=rmnchaDefaultroutingkey

#time period channel
spring.cloud.stream.bindings.rmnchatimeperiodchannel-in.destination=rmnchaTimePeriodExchange-uat
spring.cloud.stream.bindings.rmnchatimeperiodchannel-in.contentType=application/json
spring.cloud.stream.bindings.rmnchatimeperiodchannel-in.group=rmnchaTimePeriodConsmerqueue
spring.cloud.stream.rabbit.bindings.rmnchatimeperiodchannel-in.consumer.bindingRoutingKey=rmnchaTimePeriodroutingkey

#attachment channel
spring.cloud.stream.bindings.rmnchaattachmentchannel-in.destination=rmnchaAttachmentExchange-uat
spring.cloud.stream.bindings.rmnchaattachmentchannel-in.contentType=application/json
spring.cloud.stream.bindings.rmnchaattachmentchannel-in.group=rmnchaAttachmentConsmerqueue
spring.cloud.stream.rabbit.bindings.rmnchaattachmentchannel-in.consumer.bindingRoutingKey=rmnchaAttachmentroutingkey

#duplicate submission channel
spring.cloud.stream.bindings.rmnchaduplicatechannel-in.destination=rmnchaDuplicateExchange-uat
spring.cloud.stream.bindings.rmnchaduplicatechannel-in.contentType=application/json
spring.cloud.stream.bindings.rmnchaduplicatechannel-in.group=rmnchaDuplicateConsmerqueue
spring.cloud.stream.rabbit.bindings.rmnchaduplicatechannel-in.consumer.bindingRoutingKey=rmnchaDuplicateroutingkey

#aggregate legacy channel
spring.cloud.stream.bindings.rmnchaaggregatechannel-in.destination=rmnchaAggregateexchange-uat
spring.cloud.stream.bindings.rmnchaaggregatechannel-out.destination=rmnchaAggregateexchange-uat
spring.cloud.stream.bindings.rmnchaaggregatechannel-in.contentType=application/json
spring.cloud.stream.bindings.rmnchaaggregatechannel-out.contentType=application/json
spring.cloud.stream.rabbit.bindings.rmnchaaggregatechannel-out.producer.transacted=true
#queue #durable
spring.cloud.stream.bindings.rmnchaaggregatechannel-in.group=rmnchaaggregatequeue
#routing-key
spring.cloud.stream.rabbit.bindings.rmnchaaggregatechannel-in.consumer.bindingRoutingKey=rmnchaaggregate
spring.cloud.stream.rabbit.bindings.rmnchaaggregatechannel-out.producer.routingKeyExpression='rmnchaaggregate'

#rabbitmq retry
spring.cloud.stream.bindings.rmnchaaggregatechannel-in.consumer.max-attempts=200000000
spring.cloud.stream.bindings.rmnchaaggregatechannel-in.consumer.back-off-initial-interval=10000
spring.cloud.stream.bindings.rmnchaaggregatechannel-in.consumer.back-off-max-interval=10000
spring.cloud.stream.bindings.rmnchaaggregatechannel-in.consumer.back-off-multiplier=2.0


#rabbitmq retry
spring.cloud.stream.bindings.rmnchadataentrychannel-in.consumer.max-attempts=200000000
spring.cloud.stream.bindings.rmnchadataentrychannel-in.consumer.back-off-initial-interval=1000
spring.cloud.stream.bindings.rmnchadataentrychannel-in.consumer.back-off-max-interval=100000000
spring.cloud.stream.bindings.rmnchadataentrychannel-in.consumer.back-off-multiplier=2.0

spring.cloud.stream.bindings.rmnchasubmissionchannel-in.consumer.max-attempts=200000000
spring.cloud.stream.bindings.rmnchasubmissionchannel-in.consumer.back-off-initial-interval=1000
spring.cloud.stream.bindings.rmnchasubmissionchannel-in.consumer.back-off-max-interval=100000000
spring.cloud.stream.bindings.rmnchasubmissionchannel-in.consumer.back-off-multiplier=2.0

#time period channel	
spring.cloud.stream.bindings.rmnchatimeperiodchannel-in.consumer.max-attempts=200000000
spring.cloud.stream.bindings.rmnchatimeperiodchannel-in.consumer.back-off-initial-interval=1000
spring.cloud.stream.bindings.rmnchatimeperiodchannel-in.consumer.back-off-max-interval=100000000
spring.cloud.stream.bindings.rmnchatimeperiodchannel-in.consumer.back-off-multiplier=2.0

#attachment channel	
spring.cloud.stream.bindings.rmnchaattachmentchannel-in.consumer.max-attempts=200000000
spring.cloud.stream.bindings.rmnchaattachmentchannel-in.consumer.back-off-initial-interval=1000
spring.cloud.stream.bindings.rmnchaattachmentchannel-in.consumer.back-off-max-interval=100000000
spring.cloud.stream.bindings.rmnchaattachmentchannel-in.consumer.back-off-multiplier=2.0

#duplicate channel	
spring.cloud.stream.bindings.rmnchaduplicatechannel-in.consumer.max-attempts=200000000
spring.cloud.stream.bindings.rmnchaduplicatechannel-in.consumer.back-off-initial-interval=1000
spring.cloud.stream.bindings.rmnchaduplicatechannel-in.consumer.back-off-max-interval=100000000
spring.cloud.stream.bindings.rmnchaduplicatechannel-in.consumer.back-off-multiplier=2.0

sirmncha.baseurl.downloadFile.notification=https://testserver.sdrc.co.in:8443/si-rmncha-collection/downloadFromFilePath?filePath=
output.path.pdf=C:/SIRMNCHA/

#endpoint for resource server token validation
oauth2.authserver.url=https://uat.sdrc.co.in/si-rmncha-collection/
rmnchaaggregate.url=http://172.22.0.37:8080/rmnchaaggregate/